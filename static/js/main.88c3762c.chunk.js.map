{"version":3,"sources":["pages/CreateProduct.js","App.js","serviceWorker.js","index.js"],"names":["CreateProduct","state","name","price","nameTwo","priceTwo","nameThree","priceThree","convertToXml","json","concat","id","handleChanges","e","_this","setState","Object","defineProperty","target","value","saveProduct","_this$state","newProduct","Date","now","productXml","firebase","database","ref","set","saveProductTwo","_this$state2","saveProductThree","_this$state3","cancel","cancelTwo","cancelThree","_this$state4","this","react_default","a","createElement","className","htmlFor","type","placeholder","onChange","data-dismiss","onClick","Component","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","CreateProduct_CreateProduct","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88c3762c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase';\n\nexport default class CreateProduct extends Component {\n  state = {\n    name: '',\n    price: '',\n    nameTwo: '',\n    priceTwo: '',\n    nameThree: '',\n    priceThree: ''\n  };\n\n  convertToXml = json => {\n    return `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n      <product>\n        <id>${json.id}</id>\n        <name>${json.name}</name>\n        <price>${json.price}</price>\n      </product>`;\n  };\n\n  handleChanges = e => this.setState({ [e.target['name']]: e.target.value });\n\n  saveProduct = () => {\n    const { name, price } = this.state;\n\n    const newProduct = {\n      id: Date.now(),\n      name,\n      price\n    };\n\n    newProduct.productXml = this.convertToXml(newProduct);\n\n    firebase\n      .database()\n      .ref('product')\n      .set({\n        name,\n        price,\n        productXml: newProduct.productXml\n      });\n\n    this.setState({\n      name: '',\n      price: ''\n    });\n  };\n\n  saveProductTwo = () => {\n    const { nameTwo, priceTwo } = this.state;\n\n    const newProduct = {\n      id: Date.now(),\n      name: nameTwo,\n      price: priceTwo\n    };\n\n    newProduct.productXml = this.convertToXml(newProduct);\n\n    firebase\n      .database()\n      .ref('productTwo')\n      .set({\n        name: nameTwo,\n        price: priceTwo,\n        productXml: newProduct.productXml\n      });\n\n    this.setState({\n      nameTwo: '',\n      priceTwo: ''\n    });\n  };\n\n  saveProductThree = () => {\n    const { nameThree, priceThree } = this.state;\n\n    const newProduct = {\n      id: Date.now(),\n      name: nameThree,\n      price: priceThree\n    };\n\n    newProduct.productXml = this.convertToXml(newProduct);\n\n    firebase\n      .database()\n      .ref('productThree')\n      .set({\n        name: nameThree,\n        price: priceThree,\n        productXml: newProduct.productXml\n      });\n\n    this.setState({\n      nameThree: '',\n      priceThree: ''\n    });\n  };\n\n  cancel = () => {\n    this.setState({\n      name: '',\n      price: ''\n    });\n  };\n  cancelTwo = () => {\n    this.setState({\n      nameTwo: '',\n      priceTwo: ''\n    });\n  };\n  cancelThree = () => {\n    this.setState({\n      nameThree: '',\n      priceThree: ''\n    });\n  };\n\n  render() {\n    const {\n      name,\n      price,\n      nameTwo,\n      priceTwo,\n      nameThree,\n      priceThree\n    } = this.state;\n    return (\n      <section className=\"create-product\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Walmart / Menú digital / Carnes</h1>\n        </header>\n        <div className=\"row mt-3\">\n          <div className=\"col-4 offset-4\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Producto 1:</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                className=\"form-control\"\n                placeholder=\"Nombre del producto\"\n                value={name}\n                onChange={this.handleChanges}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"price\">Precio:</label>\n              <input\n                type=\"text\"\n                id=\"price\"\n                name=\"price\"\n                className=\"form-control\"\n                placeholder=\"Precio del producto\"\n                value={price}\n                onChange={this.handleChanges}\n              />\n              <small className=\"text-muted\">\n                Ejemplo: 125 (sólo números enteros)\n              </small>\n            </div>\n          </div>\n          <div className=\"col-4 offset-4\">\n            <div className=\"float-right px-0\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary mr-2\"\n                data-dismiss=\"modal\"\n                onClick={this.cancel}\n              >\n                Limpiar\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                data-dismiss=\"modal\"\n                onClick={this.saveProduct}\n              >\n                Guardar Producto\n              </button>\n            </div>\n          </div>\n        </div>\n        <hr />\n        <div className=\"row mt-3\">\n          <div className=\"col-4 offset-4\">\n            <div className=\"form-group\">\n              <label htmlFor=\"nameTwo\">Producto 2:</label>\n              <input\n                type=\"text\"\n                id=\"nameTwo\"\n                name=\"nameTwo\"\n                className=\"form-control\"\n                placeholder=\"Nombre del producto\"\n                value={nameTwo}\n                onChange={this.handleChanges}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"priceTwo\">Precio:</label>\n              <input\n                type=\"text\"\n                id=\"priceTwo\"\n                name=\"priceTwo\"\n                className=\"form-control\"\n                placeholder=\"Precio del producto\"\n                value={priceTwo}\n                onChange={this.handleChanges}\n              />\n              <small className=\"text-muted\">\n                Ejemplo: 125 (sólo números enteros)\n              </small>\n            </div>\n          </div>\n          <div className=\"col-4 offset-4\">\n            <div className=\"float-right px-0\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary mr-2\"\n                onClick={this.cancelTwo}\n              >\n                Limpiar\n              </button>\n              <button className=\"btn btn-primary\" onClick={this.saveProductTwo}>\n                Guardar Producto\n              </button>\n            </div>\n          </div>\n        </div>\n        <hr />\n        <div className=\"row mt-3\">\n          <div className=\"col-4 offset-4\">\n            <div className=\"form-group\">\n              <label htmlFor=\"nameThree\">Producto 3:</label>\n              <input\n                type=\"text\"\n                id=\"nameThree\"\n                name=\"nameThree\"\n                className=\"form-control\"\n                placeholder=\"Nombre del producto\"\n                value={nameThree}\n                onChange={this.handleChanges}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"priceThree\">Precio:</label>\n              <input\n                type=\"text\"\n                id=\"priceThree\"\n                name=\"priceThree\"\n                className=\"form-control\"\n                placeholder=\"Precio del producto\"\n                value={priceThree}\n                onChange={this.handleChanges}\n              />\n              <small className=\"text-muted\">\n                Ejemplo: 125 (sólo números enteros)\n              </small>\n            </div>\n          </div>\n          <div className=\"col-4 offset-4\">\n            <div className=\"float-right px-0\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary mr-2\"\n                onClick={this.cancelThree}\n              >\n                Limpiar\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                onClick={this.saveProductThree}\n              >\n                Guardar Producto\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport CreateProduct from './pages/CreateProduct';\nimport './App.css';\n\n// Initialize Firebase\nlet config = {\n  apiKey: 'AIzaSyBV9fTZbmYX290lOxJ6UCkGJTYKL6_vBww',\n  authDomain: 'walmart-xml-list.firebaseapp.com',\n  databaseURL: 'https://walmart-xml-list.firebaseio.com',\n  projectId: 'walmart-xml-list',\n  storageBucket: 'walmart-xml-list.appspot.com',\n  messagingSenderId: '519020373877'\n};\nfirebase.initializeApp(config);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CreateProduct />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}